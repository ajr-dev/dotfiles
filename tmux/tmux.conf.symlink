# tmux display things in 256 colors
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# Scroll history
set -g history-limit 50000

# Automatically renumber tmux windows
set -g renumber-windows on

# Set first window/pane to index 1
set -g base-index 1
setw -g pane-base-index 1

set -g prefix C-a               # set prefix to Ctrl+a
bind C-a send-prefix            # ensure that we can send Ctrl-a to other apps

# for nested tmux sessions
bind-key a send-prefix

# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Lower escape timing for quicker response to scroll-buffer access
set -sg escape-time 0

# Tile all windows
unbind =
bind = select-layout tiled

#######################
#### Mouse Support ####
#######################

# Enable mouse support for switching panes/windows
setw -g mouse on

# Drag to re-order windows
bind -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window

######################
#### Key Bindings ####
######################

# Edit configuration file
bind-key e split-window -h vim ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display "Tmux configuration reloaded"

# Synchronize all panes in a window
bind y setw synchronize-panes

# Quickly open a new window
bind N new-window

# Delete window and pane without confirmation
bind-key & kill-window
bind-key q kill-window
bind-key x kill-pane

# Split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Move through the windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pressing Ctrl+Shift+Left will move the current window to the left.
# Similarly right. No need to use the prefix
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

###############
### Vi Mode ###
###############

# Set vi mode for copy mode
setw -g mode-keys vi

# More settings to make copy-mode more vim-like
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

#############################
### Clipboard integration ###
#############################

bind -T copy-mode-vi v send -X begin-selection

if-shell 'uname | grep -q Darwin' {
    bind C-c run 'tmux save-buffer - | reattach-to-user-namespace pbcopy'; \
    bind C-v run 'tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer'

    # Copy to system clipboard
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'tmux save-buffer - | reattach-to-user-namespace pbcopy'; \
    bind -T copy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection; \

    # Selection with mouse should copy to clipboard right away, in addition to the default action.
    unbind -n -T copy-mode-vi MouseDragEnd1Pane; \
    bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run 'tmux save-buffer - | reattach-to-user-namespace pbcopy > /dev/null'; \

    # Middle click to paste from the clipboard
    unbind MouseDown2Pane; \
    bind -n MouseDown2Pane run 'tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer'
}

if-shell '[[ $(uname -s) = Linux ]]' {
    bind C-c run "tmux save-buffer - | xclip -selection clipboard -in"; \
    bind C-v run 'tmux set-buffer $(xclip -selection clipboard -out); tmux paste-buffer'; \

    # Copy to system clipboard
    bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'; \
    bind -T copy-mode-vi C-v send -X rectangle-toggle \; send -X begin-selection; \

\   # Selection with mouse should copy to clipboard right away, in addition to the default action.
    unbind -n -T copy-mode-vi MouseDragEnd1Pane; \
    bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run 'tmux save-buffer - | xclip -selection clipboard -in > /dev/null'; \

    # Middle click to paste from the clipboard
    unbind MouseDown2Pane; \
    bind -n MouseDown2Pane run 'tmux set-buffer $(xclip -o -sel clipboard); tmux paste-buffer'
}

##############################
### Color & Style Settings ###
##############################
if-shell 'uname | grep -q Darwin' \
    'source ~/.dotfiles/tmux/base16.sh'

# Extensions
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'odedlaz/tmux-onedark-theme'
set -g @plugin 'tmux-plugins/tmux-resurrect'  # restore: prefix + Ctrl-r; save: prefix + Ctrl-s
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-boot 'on'  # Tmux is automatically started after the computer is turned on. This doesn't start a terminal with tmux
set -g @continuum-restore 'on'  # last saved environment is automatically restored when tmux is started
#set -g @continuum-save-interval '0'  # stop automatic saving
set -g @resurrect-dir '~/Dropbox/.tmux-resurrect/'

# Initialize TPM (Tmux Plugin Manager). Press <Prefix>I to load plugins
run '~/.tmux/plugins/tpm/tpm'
